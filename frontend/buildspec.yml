version: 0.2

phases:
  pre_build:
    commands:
      # Get Region
      #- TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")
      #- export AWS_REGION=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" http://169.254.169.254/latest/meta-data/placement/region)
      - export AWS_REGION=ap-northeast-1
      - echo "export AWS_REGION=${AWS_REGION}" | tee -a ~/.bash_profile
      - aws configure set default.region ${AWS_REGION}
      # Get AWS_ACCOUNT_ID
      - export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
      - echo "export AWS_ACCOUNT_ID=${AWS_ACCOUNT_ID}" | tee -a ~/.bash_profile
      # Get REPOSITORY_URI
      - export IMAGE_REPO_NAME=fcj-lmduc5
      - export REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME
      # Login ECR
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - echo "Login Successful"
      - export COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - export IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      # Navigate to frontend directory and build Docker image
      - cd frontend
      - docker build -f Dockerfile.prod -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      # Push the Docker image to ECR
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      # Writing File Artifact
      - echo Writing image definitions file...
      - printf '[{"name":"frontend","imageUri":"%s"}]' "$REPOSITORY_URI:$IMAGE_TAG" > imagedefinitions.json
      - printf '[{"name":"frontend","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions-1.json
      - pwd
      - cat imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
